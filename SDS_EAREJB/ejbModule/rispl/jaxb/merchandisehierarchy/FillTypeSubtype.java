//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.12 at 02:47:07 PM IST 
//


package rispl.jaxb.merchandisehierarchy;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;



/**
 * <p>Java class for FillType_subtype.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FillType_subtype">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="KillAndFill"/>
 *     &lt;enumeration value="FullIncremental"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "FillType_subtype")
@XmlEnum
public enum FillTypeSubtype {

    @XmlEnumValue("KillAndFill")
    KILL_AND_FILL("KillAndFill"),

    /**
     * 
     * 					Usage of FullIncremental with a StoreHierarchyImport is
     * 					strictly restricted to the PreloadData elements. This means
     * 					only Regions, Districts and Stores can be ADDed, UPDated
     * 					or DELeted via FullIncremental. No HierarchyList elements
     * 					may be processed in this way.
     * 				
     * 
     */
    @XmlEnumValue("FullIncremental")
    FULL_INCREMENTAL("FullIncremental");
    private final String value;

    FillTypeSubtype(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FillTypeSubtype fromValue(String v) {
        for (FillTypeSubtype c: FillTypeSubtype.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
